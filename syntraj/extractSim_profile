0
Wrote profile results to profileme.py.lprof
Timer unit: 1e-06 s

Total time: 0.897652 s
File: /mnt/lustre02/work/bb1018/b380873/tropic_vis/traj/syntraj-profile/extractSim.py
Function: extractSim at line 2

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     2                                           @profile
     3                                           def extractSim(syn_traj, flight_time, flight_pressure, flight_lat, flight_lon):
     4         2         12.0      6.0      0.0      import datetime
     5         2          4.0      2.0      0.0      import numpy as np
     6         2          5.0      2.5      0.0      import xarray as xr
     7         2       1483.0    741.5      0.2      from timeround10 import timeround10
     8         2        984.0    492.0      0.1      from randIndx import randIndx
     9                                           
    10                                               # Global variables in the script form
    11         2          3.0      1.5      0.0      sim_acronym = '0V2M0A0R'
    12         2          2.0      1.0      0.0      n = 10
    13         2          2.0      1.0      0.0      ll_interval = 0.75
    14         2          2.0      1.0      0.0      alt_interval = 1
    15                                           
    16                                               # Read in the appropriate ICON simulation file
    17         2          2.0      1.0      0.0      sim_dir = '/work/bb1018/b380873/model_output/ICON/'
    18         2      39270.0  19635.0      4.4      var_ICON = xr.open_dataset(sim_dir + 'ICON_3D_F10MIN_icon_tropic_' + sim_acronym + '_PL2.nc')
    19                                           
    20                                               # Find the nearest whole 10-min time.
    21         2         47.0     23.5      0.0      flight_time_approx = timeround10(flight_time)
    22                                           
    23                                               # Construct the time window to extract.
    24         2         32.0     16.0      0.0      early_time = flight_time_approx - datetime.timedelta(minutes=30)
    25         2          8.0      4.0      0.0      late_time = flight_time_approx + datetime.timedelta(minutes=30)
    26                                           
    27                                               # Find indices corresponding to ICON pressure levels above + below the closest flight track match.
    28         2          2.0      1.0      0.0      basedir = '/work/bb1018/b380873/tropic_vis/remapping/'
    29         2       6754.0   3377.0      0.8      sim_pressures = np.loadtxt(basedir + 'PMEAN_48-72.txt')
    30         2        158.0     79.0      0.0      i = np.argmin(np.abs(flight_pressure - sim_pressures))
    31         2         12.0      6.0      0.0      if i < 1 or i > 117:
    32                                                   raise Exception('Flight pressure outside of simulation range.')
    33         2       7435.0   3717.5      0.8      var_ICON = var_ICON.isel( plev=slice(i-alt_interval, i+alt_interval+1) )
    34                                           
    35                                               # Extract the time and lat-lon intervals
    36         2         10.0      5.0      0.0      var_ICON = var_ICON.sel( time=slice(early_time, late_time),
    37         2         62.0     31.0      0.0                               lat=slice(flight_lat-ll_interval, flight_lat+ll_interval),
    38         2      14076.0   7038.0      1.6                               lon=slice(flight_lon-ll_interval, flight_lon+ll_interval) )
    39                                           
    40                                               # Randomly generate <n> indices along each axis and save these from the var_ICON structure into syn_traj.
    41         2       1062.0    531.0      0.1      dim_rand = randIndx(var_ICON['qv'])
    42        22         78.0      3.5      0.0      for k, dims in enumerate(dim_rand):
    43       220       1122.0      5.1      0.1          for v in syn_traj.variables:
    44       200        322.0      1.6      0.0              if v != 'ntraj' and v != 'time':
    45       160     824700.0   5154.4     91.9                  syn_traj[v].loc[dict(ntraj=k+1, time=flight_time)] = var_ICON[v].isel(time=dims[0], plev=dims[1], lat=dims[2], lon=dims[3])
    46                                           
    47         2          3.0      1.5      0.0      return syn_traj

